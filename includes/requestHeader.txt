-----------------------------------------------------------

MESSAGE FORMAT: https://www.rfcreader.com/#rfc7230_line856

SP = space
CRLF = empty line

-----------------------------------------------------------
-----------------------------------------------------------

HTTP-message   = start-line :  = request-line or status-line
				*( header-field CRLF )
				CRLF // empty line
				[ message-body ]

-----------------------------------------------------------

Parsing:

	start-line: into structure
	header field: into hash table by field name until the empty line.
	message body: parse data if a message is expected.

 	A recipient MUST parse an HTTP message as a sequence of octets

	A sender MUST NOT send whitespace between the start-line and the
	first header field.

-----------------------------------------------------------
-----------------------------------------------------------

----- Request-line: -----

  	= method SP request-target SP HTTP-version CRLF

	request-method: [RFC7231 section 4]
	[
		GET:
		Transfer a current representation of the target resource.
		sending a body in a GET request : rejection of the request.


		POST:
		 Perform resource-specific processing on the request payload.
		    o  Providing a block of data, such as the fields entered into an HTML
				form, to a data-handling process;

			o  Posting a message to a bulletin board, newsgroup, mailing list,
				blog, or similar group of articles;

			o  Creating a new resource that has yet to be identified by the
				origin server; and

			o  Appending data to a resource's existing representation(s).

			(RFC 7231 Section 3.1.4.2)

			response:
				 206 (Partial Content)
				 304 (Not Modified)
				 416 (Range Not Satisfiable)
				 201 (Created)


		DELETE:
		Remove all current representations of the target ressource.
		this method is similar to the rm command in UNIX.
			response:
				 202 (Accepted) status code
				 204 (No Content)
				 200 (OK) 
	]


---- request-target: -----	[RFC 7230 5.3]
	[
			=	origin-form 
			/ absolute-form
					// authority-form : only used for CONNECT
					// asterisk-form: only used for a server-wide OPTIONS request

		--- origin-form    = absolute-path [ "?" query ]
			If the target URI's path component is empty, the client MUST send "/" as the path within
			ex:          
				GET /where?q=now HTTP/1.1
				Host: www.example.org


		---	absolute-form  = absolute-URI
			ex:
				GET http://www.example.org/pub/WWW/TheProject.html HTTP/1.1
	]

-----------------------------------------------------------

	HTTP-version:
	[


	]


-----------------------------------------------------------


Request hearder field

   +-------------------+--------------------------+
   | Header Field Name | Defined in...            |
   +-------------------+--------------------------+
   | Cache-Control     | Section 5.2 of [RFC7234] | https://www.rfcreader.com/#rfc7234_line924
   | Expect            | Section 5.1.1            | https://www.rfcreader.com/#rfc7231_line1508
   | Host              | Section 5.4 of [RFC7230] | https://www.rfcreader.com/#rfc7230_line1970
   | Max-Forwards      | Section 5.1.2            | https://www.rfcreader.com/#rfc7231_line1620
   | Pragma            | Section 5.4 of [RFC7234] |	https://www.rfcreader.com/#rfc7234_line1271
   | Range             | Section 3.1 of [RFC7233] | https://www.rfcreader.com/#rfc7233_line265
   | TE                | Section 4.3 of [RFC7230] | https://www.rfcreader.com/#rfc7230_line1743
   +-------------------+--------------------------+


	Cache-Control: https://www.imperva.com/learn/performance/cache-control/
		The "Cache-Control" header field is used to specify directives for
   			caches along the request/response chain.
		A cache MUST obey the requirements of the Cache-Control directives
  			 defined in this section. 
		- Cache-Control   = 1#cache-directive
	    - cache-directive = token [ "=" ( token / quoted-string ) ]



		Cache-directive: [RFC 7234 5.2.1 : https://www.rfcreader.com/#rfc7234_line956]

		definition: delta-seconds = 1*DIGIT [https://www.rfcreader.com/#rfc7234_line169)
		The delta-seconds rule specifies a non-negative integer, representing
		time in seconds.

			max-age =  delta-seconds
				The "max-age" request directive indicates that the client is
				unwilling to accept a response whose age is greater than the
				specified number of seconds.

			max-stale = delta-second
			min-fresh = delta-seconds
			no-cache
			no-store 
			....


	Expect:
		Expect  = "100-continue" only.
		A server that receives an Expect field-value other than 100-continue
			MAY respond with a 417 (Expectation Failed) status code to indicate
			that the unexpected expectation cannot be met.
		A 100-continue expectation informs recipients that the client is
			about to send a (presumably large) message body in this request and
			wishes to receive a 100 (Continue) interim response if the
			request-line and header fields are not sufficient to cause an
			immediate success, redirect, or error response.

		 A server that receives a 100-continue expectation in an HTTP/1.0
      request MUST ignore that expectation.


	Host:
		Host = uri-host [ ":" port ]
		A client MUST send a Host header field in all HTTP/1.1 request
   		messages even if the request-target is in the absolute-form

		   For example, a GET request to the origin server for
			<http://www.example.org/pub/WWW/> would begin with:

				GET /pub/WWW/ HTTP/1.1
				Host: www.example.org
		response:
		 400 (Bad Request) status code to any
			HTTP/1.1 request message that lacks a Host header field and to any
			request message that contains more than one Host header field or a
			Host header field with an invalid field-value.



	Max-Forwards: /// IGNORE for us
		The "Max-Forwards" header field provides a mechanism with the TRACE
			(Section 4.3.8) and OPTIONS (Section 4.3.7) request methods
		A recipient MAY ignore a Max-Forwards header field received with any
			other request methods.


	Pragma:
		 When the Cache-Control header field is not present in a request,
  		 caches MUST consider the no-cache request.
		ex:
			Cache-Control: max-age=30
			Pragma: no-cache
		will constrain HTTP/1.1 caches to serve a response no older than 30 seconds


	Range: /// j'ai rien compris ///
		only for GET, ignore sinon.
	 	An origin server MUST ignore a Range header field that contains a
   			range unit it does not understand.



	TE: /// j'ai pas compris non plus ///


-----------------------------------------------------------
